#ifndef SCENE_H
#define SCENE_H

#include "Light.h"

/*
Description:
   The Scene class is used to store and operate on all the objects and lights defined by the user in the scene description file.

   It provides a function for finding the nearest intersection point of a particular ray by iterating over all the objects in the scene. Note that this function
   can be used with any type of ray, including rays generated by the RayGenerator, shadow rays and reflected rays.

   It also provides a function for calculating the lighting at a specific intersection point by iterating over all the lights in the scene. Note that this function
   calls itself recursively to calculate reflections. The number of times it calls itself is specified by maxDepth.

   Just like the SceneDescription class, it is created by the FileParser using the parameters specified in the scene description file.
*/

class Scene
{
public:

   Scene(const std::vector<GeometricShape*>& objects, const std::vector<Light*>& lights, int maxDepth);
   ~Scene();

   bool findNearestIntersection(const Ray& ray, Intersection* nearestIntersection);
   Colour calculateLightingAtIntersection(const Point& eye, Intersection* intersection);

private:

   std::vector<GeometricShape*> objects;
   std::vector<Light*> lights;
   int maxDepth;
};

#endif

